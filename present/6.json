{
    "title": "6. jQuery Mobile",

    "slides": [
        {
            "title": "Content",
            "bullets": [
                "jQuery Mobile",
                "Server side storage",
                "APIs"
            ]
        },
        {
            "title": "jQuery Mobile",
            "bullets": [
                ["User Interface Framework", "Focused on helping you build a consistant user interface", "Premade visual styles and components", "Customizable"],
                ["jQuery Mobile 1.0",
                    "Requires jQuery 1.6.4 or newer",
                    "Released 2011-11-16, so very new!",
                    "http://jquerymobile.com/",
                    "http://www.jackbellis.com/jqm/jqm_CommandReference.html"],
                ["Alternatives", "Dojo Mobile http://dojotoolkit.org/features/mobile", "Sencha Touch http://www.sencha.com/products/touch/"]
            ]
        },
        {
            "title": "Philosophy",
            "bullets": [
                "Uses data- attributes on html elements to signify a specific user interface feature",
                "Adds and/or modifies the elements you have in your web page",
                ["Positive", "Get a descent user interface with minimal effort", "Pre-made components for forms/presentation"],
                ["Negative", "Harder to style exactly like you want", "May need to debug the css to find out how to change styles", "Might be a bit heavy for older phones"]
            ]
        },
        {
            "title": "The page",
            "bullets": [
                ["jQuery has added its own concept of a \"page\"", "One single html file can contain many pages", "Will use Ajax even when loading a different html file into the current page"],
                ["Usage", "Define every page containing element as having the data-role \"page\"", "<div data-role=\"page\">", "A page can then contain header, content and footer", "<div data-role=\"header\">", "<div data-role=\"content\">", "<div data-role=\"footer\">"]
            ]
        },
        {
            "title": "Multiple pages and links between them",
            "bullets": [
                ["jQuery will handle switching between pages", "Can use animation for page switches", "Uses Ajax as default for internal links to other files too"],
                ["Usage", "Give every page an id", "<div data-role=\"page\" id=\"moreinfo\">", "Create link with hash and id", "<a href=\"#moreinfo\">", "Turn off jQuery handling with rel", "<a href=\"otherpage.html\" rel=\"external\">"]
                
            ]
        },
        {
            "title": "Themes",
            "bullets": [
                ["jQuery Mobile introduces themes for changing the style of all elements", "Just another css file, but by defining the class names for the styles, other parties can also create themes for your content"],
                ["Usage", "Specify the data-theme attribute for the page or an individual element", "<div data-role=\"page\" data-theme=\"d\">", "A few built-in themes available as a, b, c, d, e"]
            ]
        },
        {
            "title": "Events",
            "bullets": [
                ["More complicated handling of the document load event",
                    "Place your own JavaScript code/file between jQuery and JQuery Mobile",
                    "Bind to the mobileinit event for the document",
                    "$(document).bind(\"mobileinit\", function() { });"],
                ["Page events",
                    ""]
            ]
        },
        {
            "title": "Forms",
            "bullets": [
                "All form elements should be placed inside a form element",
                ["jQuery Mobile will take over the posting, perform it using Ajax, and replace contents with whatever the post returns",
                    "Can be disabled by setting data-ajax=\"false\" on form element",
                    "Can also be disabled by catching the submit event for the form and preventDefault"],
                ["Usage",
                    "label and input elements are block elements, filling the entire width of the page",
                    "Unless inside a fieldset element with data-role\"fieldcontain\", then label and input are next to each other"]
            ]
        },
        {
            "title": "Input elements",
            "bullets": [
                ["Usage radio buttons",
                    "Put inside container fieldset element with data-role=\"controlgroup\""],
                ["Usage checkboxes",
                    "Single elements styled automatically",
                    "Put inside container fieldset element with data-role=\"controlgroup\" and data-type=\"horizontal\" to have them stiched together on the same line without actual check box"]
            ]
        },
        {
            "title": "Buttons",
            "bullets": [
                "Basic jQuery button fills the entire width of the page",
                ["Usage",
                    "a element with data-role=\"button\"",
                    "input element of type \"submit\" or \"button\"",
                    "button element"],
                ["Icon for the button",
                    "Can be specified with data-icon attribute",
                    "arrow-l, arrow-r, arrow-u, arrow-d, plus, minus, check, delete"],
                ["Other options",
                    "data-inline=\"true\" not to fill entire width",
                    "Surround with div element with data-role=\"controlgroup\" to have them stiched together"]
            ]
        },
        {
            "title": "Lists",
            "bullets": [
                "Common in native apps and have been styled accordingly in jQuery Mobile",
                ["Usage",
                    "ul element with data-role=\"listview\"",
                    "li elements inside",
                    "a elements inside li will be styled accordingly"]
            ]
        },
        {
            "title": "Dialogs",
            "bullets": [
                "Similar to the \"page\" but is displayed on top of the content and centered in the window",
                "Use data-role=\"dialog\" for the containing div element of the dialog"
            ]
        },
        {
            "title": "Swipe events",
            "bullets": [
                ["jQuery Mobile supports detecting left and right swipes", "Even works with mouse"],
                ["Events", "swipeleft, swiperight"],
                ["Usage", "$(element).bind(\"swipeleft\", function (event) { doSomething(); });"]
            ]
        },
        {
            "title": "Server side storage",
            "bullets": [
                ["Most apps need to store data on the server", 
                    "Will survive browser/OS reinstalls", 
                    "Access the same information from multiple locations (browsers)"],
                ["Nature of the web/JavaScript means you can't hide server access",
                    "Always need to login in order to save and protect data on the server side"]
            ]
        },
        {
            "title": "Organizing a client and server",
            "bullets": [
                ["Traditional approach",
                    "Server scripts deliver html with data formatted inside html",
                    "Forms are posted to the server where data is stored/changed",
                    "The whole page reloads and we start all over"],
                ["Separation of client and server",
                    "Server delivers static html without any specific data",
                    "Client scripts (JavaScript) requests data from server using API, JSON etc",
                    "Client scripts formats incoming data and inserts as html into page",
                    "Forms are sent as Ajax requests to the server scripts implementing the API"]
            ]
        },
        {
            "title": "Build your own API",
            "bullets": [
                "Still server side scripts delivering stuff over http",
                ["Difference is that all data is structured and not dependent on the view",
                    "No html",
                    "Data delivered as JSON (or possibly XML)"],
                ["Advantages",
                    "Easy to use the functionality of the service from other applications",
                    "All formatting/view code is in one place - the client"]
            ]
        },
        {
            "title": "Combining local and remote storage",
            "bullets": [
                ["Why use both?",
                    "App usable without network connection",
                    "App is faster when utilizing local storage first",
                    "Data accessible from multiple browsers"],
                ["The difficult part is the syncing of data",
                    "What happens if the server receives new data from multiple locations at the same time?",
                    "Make sure data is not overritten",
                    "Might need to keep track of not just the data, but how it was created",
                    "List of deletes. List of updates. List of creations"]
            ]
        },
        {
            "title": "Public APIs",
            "bullets": [
                "Accessible without authenticating first",
                ["For JavaScript only: need to support JSONP",
                    "IP address to API server will be visitor IP"],
                ["If no JSONP, solve with server script as mediator",
                    "IP address to API server will always be your own server's",
                    "Can be blocked or throttled by API service."]
            ]
        },
        {
            "title": "Public API examples",
            "bullets": [
                ["Twitter Search API",
                    "Retrieve all tweets with specific words",
                    "https://dev.twitter.com/docs/api/1/get/search",
                    "http://search.twitter.com/search.json?q=jönköping&lang=en"],
                ["Google Spreadsheets Data API",
                    "Retrieve contents of a published Google Spreadsheet",
                    "http://code.google.com/apis/spreadsheets/",
                    "http://code.google.com/apis/gdata/samples/spreadsheet_sample.html"],
                ["Other links",
                    "http://www.mashup.se/ (Swedish)",
                    "http://www.programmableweb.com/apis/directory/1?format=JSONP"]
            ]
        },
        {
            "title": "OAuth",
            "bullets": [
                "For giving a site access to your data, without ever knowing your password",
                ["OAuth 1.0b",
                    "Used by Twitter",
                    "Requires some cryptographic signing code (need library)",
                    "Is considered secure even over http (without SSL)"],
                ["OAuth 2",
                    "Used by Facebook, Google",
                    "Simpler, just building urls, no cryptography needed",
                    "Always over https (SSL)"],
                ["Usage",
                    "Need to register your site/app at Twitter/Facebook/Google",
                    "You'll get a public app public id and an app secret token"]
            ]
        }
    ]
}

